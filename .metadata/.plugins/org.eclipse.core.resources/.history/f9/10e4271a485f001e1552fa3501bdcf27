package com.masai.exception;

import java.time.LocalDateTime;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;

@ControllerAdvice
public class GlobalExceptionHandler { ////this is a single point to handle exception for whole application
	
		@ExceptionHandler(MethodArgumentNotValidException.class)
		public ResponseEntity<String> handleInvalidMethodArguments(MethodArgumentNotValidException ex){
			List<ObjectError> allErrors = ex.getAllErrors();
			List<String> errorsToStringList = MethodArgumentNotValidException.errorsToStringList(allErrors);
			String message = String.join(", ", errorsToStringList);
			return new ResponseEntity<>(message, HttpStatus.BAD_REQUEST);
		}

	
	@ExceptionHandler(InvalidInputException.class)
	public ErrorDetails invalidInputExceptionHandler(InvalidInputException ex, WebRequest request) {
		ErrorDetails errorDetails = new ErrorDetails(LocalDateTime.now(), ex.getMessage(), request.getDescription(false));
		return errorDetails;
	}
	
	@ExceptionHandler(NotFoundException.class)
	public ErrorDetails notFoundExceptionHandler(NotFoundException ex, WebRequest request) {
		ErrorDetails errorDetails = new ErrorDetails(LocalDateTime.now(), ex.getMessage(), request.getDescription(false));
		return errorDetails;
	}
	
}
